# This is a basic workflow to help you get started with Actions

name: CI

on:
  # Run on pushes to the default branch.
  push:
    branches:
      - main

  # Run on all PRs.
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  # Support merge queues.
  merge_group:

  # Allow running this workflow manually from the Actions tab.
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Git checkout
      # Pin actions their full commit hashes to prevent supply-chain attacks.
      # To update, find the latest tag on the releases page,
      # then copy the full SHA and paste it back here (and update the comment).
      # Alternatively, setup Dependabot for the `github-actions` ecosystem.
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
        clean: true
        persist-credentials: false
        set-safe-directory: true

    - name: Setup Node.js environment
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version: 16.x
        cache: 'npm'

    - name: Cache ~/.elm
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: ~/.elm
        key: elm-${{ runner.os }}-${{ hashFiles('**/elm.json', 'elm-tooling.json') }}
        restore-keys: |
          elm-${{ runner.os }}-

    - name: Cache node_modules
      id: cache-node_modules
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: node_modules
        key: node_modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          node_modules-${{ runner.os }}-

    - name: Cache turbo build setup
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: npm ci
      if: steps.cache-node_modules.outputs.cache-hit != 'true'
      env:
        NO_ELM_TOOLING_INSTALL: 1
      run: npm ci --engine-strict

    - name: elm-tooling install
      run: npx --no-install elm-tooling install

    - name: Install turbo
      run: npm install -g turbo

    - name: Run tests
      run: npm test
      env:
        AUTH_GITHUB: ${{ github.token }}
