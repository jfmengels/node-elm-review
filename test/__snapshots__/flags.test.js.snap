// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Running --compiler without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--compiler[39m flag needs more information.

Here is the documentation for this flag:

    [36m--compiler <path-to-elm>[39m
        Specify the path to the [95melm[39m compiler.

"
`;

exports[`Running --config without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--config[39m flag needs more information.

Here is the documentation for this flag:

    [36m--config <path-to-review-directory>[39m
        Use the review configuration in the specified directory instead of the
        one found in the current directory or one of its parents.

"
`;

exports[`Running --elm-format-path without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--elm-format-path[39m flag needs more information.

Here is the documentation for this flag:

    [36m--elm-format-path <path-to-elm-format>[39m
        Specify the path to [95melm-format[39m.

"
`;

exports[`Running --elmjson without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--elmjson[39m flag needs more information.

Here is the documentation for this flag:

    [36m--elmjson <path-to-elm.json>[39m
        Specify the path to the elm.json file of the project. By default,
        the one in the current directory or its parent directories will be used.

"
`;

exports[`Running --github-auth with a bad value 1`] = `
"[32m-- INVALID FLAG ARGUMENT -------------------------------------------------------[39m

The value [91mbad[39m passed to [36m--github-auth[39m is not a valid one.

Here is the documentation for this flag:

    [36m--github-auth=<github-api-token>[39m
        To be used along with [36m--template[39m to avoid GitHub rate limiting.
        Follow https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token to create an API token. The API token needs access to public repositories.

        Then use the flag like this:
        [92m  --github-auth=my-user-name:abcdef01234567890[39m

"
`;

exports[`Running --ignore-dirs without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--ignore-dirs[39m flag needs more information.

Here is the documentation for this flag:

    [36m--ignore-dirs <dir1,dir2,...>[39m
        Ignore the reports of all rules for the specified directories.

"
`;

exports[`Running --ignore-files without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--ignore-files[39m flag needs more information.

Here is the documentation for this flag:

    [36m--ignore-files <file1,file2,...>[39m
        Ignore the reports of all rules for the specified files.

"
`;

exports[`Running --report with an unknown value 1`] = `
"[32m-- INVALID FLAG ARGUMENT -------------------------------------------------------[39m

The value [91munknown[39m passed to [36m--report[39m is not a valid one.

Here is the documentation for this flag:

    [36m--report=<json or ndjson>[39m
        Error reports will be in JSON format. [35mjson[39m prints a single JSON object
        while [35mndjson[39m will print one JSON object per error each on a new line.
        The formats are described in this document: https://bit.ly/31F6jzz

"
`;

exports[`Running --report without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--report[39m flag needs more information.

Here is the documentation for this flag:

    [36m--report=<json or ndjson>[39m
        Error reports will be in JSON format. [35mjson[39m prints a single JSON object
        while [35mndjson[39m will print one JSON object per error each on a new line.
        The formats are described in this document: https://bit.ly/31F6jzz

"
`;

exports[`Running --rules without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--rules[39m flag needs more information.

Here is the documentation for this flag:

    [36m--rules <rule1,rule2,...>[39m
        Run with a subsection of the rules in the configuration.
        Specify them by their name, and separate them by commas.

"
`;

exports[`Running --template with a bad value 1`] = `
"[32m-- INVALID FLAG ARGUMENT -------------------------------------------------------[39m

The value [91mnot-github-repo[39m passed to [36m--template[39m is not a valid one.

Here is the documentation for this flag:

    [36m--template <author>/<repo>[/path-to-the-config-folder][#branch-or-commit][39m
        Use the review configuration from a GitHub repository. You can use this
        to try out [92melm-review[39m, a configuration or a single rule.
        This flag requires Internet access, even after the first run.
        Examples:
          - elm-review --template author/elm-review-configuration
          - elm-review --template jfmengels/elm-review-unused/example#master

        I recommend to only use this temporarily, and run [93melm-review init[39m with
        this same flag to copy the configuration to your project.

"
`;

exports[`Running --template without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--template[39m flag needs more information.

Here is the documentation for this flag:

    [36m--template <author>/<repo>[/path-to-the-config-folder][#branch-or-commit][39m
        Use the review configuration from a GitHub repository. You can use this
        to try out [92melm-review[39m, a configuration or a single rule.
        This flag requires Internet access, even after the first run.
        Examples:
          - elm-review --template author/elm-review-configuration
          - elm-review --template jfmengels/elm-review-unused/example#master

        I recommend to only use this temporarily, and run [93melm-review init[39m with
        this same flag to copy the configuration to your project.

"
`;

exports[`Running init --compiler without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--compiler[39m flag needs more information.

Here is the documentation for this flag:

    [36m--compiler <path-to-elm>[39m
        Specify the path to the [95melm[39m compiler.
        The [95melm[39m compiler is used to know the version of the compiler to write
        down in the [93mreview/elm.json[39m fileâ€™s \`elm-version\` field. Use this if you
        have multiple versions of the [95melm[39m compiler on your device.

"
`;

exports[`Running init --config without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--config[39m flag needs more information.

Here is the documentation for this flag:

    [36m--config <path-to-review-directory>[39m
        Create the configuration files in the specified directory instead of in
        the review/ directory.

"
`;

exports[`Running init --template with a bad value 1`] = `
"[32m-- INVALID FLAG ARGUMENT -------------------------------------------------------[39m

The value [91mnot-github-repo[39m passed to [36m--template[39m is not a valid one.

Here is the documentation for this flag:

    [36m--template <author>/<repo>[/path-to-the-config-folder][#branch-or-commit][39m
        Copy the review configuration from a GitHub repository, at the root or
        in a folder. Examples:
        - elm-review init --template author/elm-review-configuration
        - elm-review init --template jfmengels/elm-review-unused/example#master

"
`;

exports[`Running init --template without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--template[39m flag needs more information.

Here is the documentation for this flag:

    [36m--template <author>/<repo>[/path-to-the-config-folder][#branch-or-commit][39m
        Copy the review configuration from a GitHub repository, at the root or
        in a folder. Examples:
        - elm-review init --template author/elm-review-configuration
        - elm-review init --template jfmengels/elm-review-unused/example#master

"
`;

exports[`Running new-package --compiler without an argument 1`] = `
"[32m-- MISSING FLAG ARGUMENT -------------------------------------------------------[39m

The [91m--compiler[39m flag needs more information.

Here is the documentation for this flag:

    [36m--compiler <path-to-elm>[39m
        Specify the path to the [95melm[39m compiler.
        The [95melm[39m compiler is used to know the version of the compiler to write
        down in the [93mreview/elm.json[39m fileâ€™s \`elm-version\` field. Use this if you
        have multiple versions of the [95melm[39m compiler on your device.

"
`;

exports[`Running with an unknown flag 1`] = `
"[32m-- UNKNOWN FLAG ----------------------------------------------------------------[39m

I did not recognize this flag:

    [91mwatc[39m

Maybe you want one of these instead?

[92m    --watch[39m
[92m    --help[39m

"
`;

exports[`Running with an unknown shorthand flag 1`] = `
"[32m-- UNKNOWN FLAG ----------------------------------------------------------------[39m

I did not recognize this shorthand flag: [91m-u[39m

I only know these: [92m-h[39m, [92m-v[39m

"
`;

exports[`Using the same flag twice 1`] = `
"[32m-- FLAG USED SEVERAL TIMES -----------------------------------------------------[39m

The [91m--config[39m flag may not be used several times. I need a single value for this flag but I got several, and I don't know which one to choose.

In case it helps, here is the documentation for this flag:

    [36m--config <path-to-review-directory>[39m
        Use the review configuration in the specified directory instead of the
        one found in the current directory or one of its parents.

"
`;
